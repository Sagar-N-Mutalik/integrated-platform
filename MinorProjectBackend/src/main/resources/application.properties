spring.application.name=secured-health-records-backend

# Active Spring Profile
# Set to 'dev' for development and 'prod' for production
spring.profiles.active=dev

# Server Configuration
server.port=8080
server.servlet.context-path=/api/v1

# MongoDB Configuration
spring.data.mongodb.uri=${MONGODB_URI:mongodb://localhost:27017/secured_health_records}
spring.data.mongodb.auto-index-creation=true

# JWT Configuration
jwt.secret=${JWT_SECRET:your-256-bit-secret-key-change-this-in-production}
jwt.expiration=${JWT_EXPIRATION:86400000}

# Cloudinary Configuration
cloudinary.cloud-name=${CLOUDINARY_CLOUD_NAME:your-cloud-name}
cloudinary.api-key=${CLOUDINARY_API_KEY:your-api-key}
cloudinary.api-secret=${CLOUDINARY_API_SECRET:your-api-secret}

# MailerSend Configuration
mailersend.api-key=${MAILERSEND_API_KEY:your-mailersend-api-key}
mailersend.from-email=${MAILERSEND_FROM_EMAIL:noreply@yourdomain.com}
mailersend.from-name=${MAILERSEND_FROM_NAME:Secured Health Records}

# Logging Configuration
logging.level.com.securedhealthrecords=DEBUG
logging.level.org.springframework.security=DEBUG

# File Upload Configuration
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

# CORS Configuration
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001}

# Frontend URL for share links
frontend.url=${FRONTEND_URL:http://localhost:3000}